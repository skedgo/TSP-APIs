{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Taxi API",
    "description" : "Alpha version of the TSP connector for taxis used to connect to SkedGo's platform.\nReturns information in GeoJSON",
    "license" : {
      "name" : "Apache 2.0 License",
      "url" : "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version" : "1.0.0",
    "x-logo" : {
      "url" : "https://developer.tripgo.com/img/tripgo-api-logo-color.svg"
    }
  },
  "paths" : {
    "/estimate/price" : {
      "post" : {
        "tags" : [ "Taxi" ],
        "summary" : "Estimated price for products",
        "description" : "An estimated price range for each product offered at a given location.",
        "operationId" : "estimatePrice",
        "parameters" : [ {
          "name" : "x-access_key",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PriceEstimateInput"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "List of price estimates for each product available",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PriceEstimateList"
                }
              }
            }
          },
          "403" : {
            "description" : "This method requires an `x-access_key` and it is either missing or invalid, or the the credentials provided are not sufficient for access to the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "error"
                }
              }
            }
          }
        }
      }
    },
    "/estimate/time" : {
      "post" : {
        "tags" : [ "Taxi" ],
        "summary" : "ETAs for products",
        "description" : "ETAs for all products offered at a given location, with the responses expressed in seconds",
        "operationId" : "estimateTime",
        "parameters" : [ {
          "name" : "x-access_key",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Detailed information on the bike/car systems in the requested search area.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TimeEstimateList"
                }
              }
            }
          },
          "403" : {
            "description" : "This method requires an `x-access_key` and it is either missing or invalid, or the the credentials provided are not sufficient for access to the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "error"
                }
              }
            }
          }
        }
      }
    },
    "/booking/events/confirm" : {
      "post" : {
        "tags" : [ "Taxi" ],
        "summary" : "Book action",
        "description" : "Book a taxi",
        "operationId" : "book",
        "parameters" : [ {
          "name" : "x-access_key",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BookingInput"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Booked response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookingOutput"
                }
              }
            }
          },
          "403" : {
            "description" : "This method requires an `x-access_key` and it is either missing or invalid, or the the credentials provided are not sufficient for access to the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "error"
                }
              }
            }
          }
        }
      }
    },
    "/booking/events/cancel" : {
      "post" : {
        "tags" : [ "Taxi" ],
        "summary" : "Cancel action",
        "description" : "Cancel a booking",
        "operationId" : "cancelBooking",
        "parameters" : [ {
          "name" : "x-access_key",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CancelInput"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Cancel response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookingOutput"
                }
              }
            }
          },
          "403" : {
            "description" : "This method requires an `x-access_key` and it is either missing or invalid, or the the credentials provided are not sufficient for access to the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "error"
                }
              }
            }
          }
        }
      }
    },
    "/provider" : {
      "get" : {
        "tags" : [ "Shared" ],
        "summary" : "Information of the provider",
        "description" : "Information about the provider, including company info and enabled endpoints",
        "operationId" : "provider",
        "parameters" : [ {
          "name" : "x-access_key",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Detailed information on provider",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Provider"
                }
              }
            }
          },
          "403" : {
            "description" : "This method requires an `x-access_key` and it is either missing or invalid, or the the credentials provided are not sufficient for access to the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "error"
                }
              }
            }
          }
        }
      }
    },
    "/coverage" : {
      "get" : {
        "tags" : [ "Shared" ],
        "summary" : "All supported areas",
        "description" : "All the coverage areas that this operator serves, including optionally (but highly recommended!) information on products and prices. Information about each area is returned as a GeoJSON Feature, within a single GeoJSON FeatureCollection.",
        "operationId" : "coverage",
        "parameters" : [ {
          "name" : "x-access_key",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Detailed information on the coverage of the provider.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Coverage"
                }
              }
            }
          },
          "403" : {
            "description" : "This method requires an `x-access_key` and it is either missing or invalid, or the the credentials provided are not sufficient for access to the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "error"
                }
              }
            }
          }
        }
      }
    },
    "/config" : {
      "get" : {
        "tags" : [ "Shared" ],
        "summary" : "Endpoints available",
        "description" : "All the endpoints implemented, with their corresponding URL",
        "operationId" : "config",
        "parameters" : [ {
          "name" : "x-access_key",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of endpoints implemented.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EndpointsConfig"
                }
              }
            }
          },
          "403" : {
            "description" : "This method requires an `x-access_key` and it is either missing or invalid, or the the credentials provided are not sufficient for access to the specified resource.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "BookingOption" : {
        "type" : "object",
        "properties" : {
          "website" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "deeplink" : {
            "type" : "string"
          }
        },
        "description" : "Options to book this particular product"
      },
      "CoverageArea" : {
        "required" : [ "geometry", "id", "properties", "type" ],
        "type" : "object",
        "properties" : {
          "geometry" : {
            "$ref" : "#/components/schemas/MultiPolygon"
          },
          "id" : {
            "type" : "string"
          },
          "properties" : {
            "$ref" : "#/components/schemas/CoverageProperties"
          },
          "type" : {
            "type" : "string",
            "description" : "the feature type",
            "enum" : [ "Feature" ]
          }
        }
      },
      "CoverageProperties" : {
        "type" : "object",
        "properties" : {
          "products" : {
            "type" : "array",
            "description" : "List of products available",
            "items" : {
              "$ref" : "#/components/schemas/Product"
            }
          },
          "pricingRules" : {
            "type" : "array",
            "description" : "List of pricing plans available",
            "items" : {
              "$ref" : "#/components/schemas/PricingRules"
            }
          }
        }
      },
      "Customer" : {
        "required" : [ "email", "first-name", "id", "last-name", "phone" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "customer id"
          },
          "first-name" : {
            "type" : "string",
            "description" : "customer first name"
          },
          "last-name" : {
            "type" : "string",
            "description" : "customer last name"
          },
          "phone" : {
            "type" : "string",
            "description" : "customer phone"
          },
          "email" : {
            "type" : "string",
            "description" : "customer email"
          }
        },
        "description" : "customer information"
      },
      "PricingRules" : {
        "required" : [ "fare" ],
        "type" : "object",
        "properties" : {
          "planId" : {
            "type" : "string",
            "description" : "a unique identifier for this plan in the system"
          },
          "url" : {
            "type" : "string",
            "description" : "a fully qualified URL where the customer can learn more about this particular scheme"
          },
          "name" : {
            "type" : "string",
            "description" : "name of this pricing scheme"
          },
          "fare" : {
            "$ref" : "#/components/schemas/Fare"
          },
          "isTaxable" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string",
            "description" : "Text field describing the particular pricing plan in human readable terms."
          }
        },
        "description" : "List of pricing plans available"
      },
      "TimeEstimateList" : {
        "required" : [ "timeEstimates" ],
        "type" : "object",
        "properties" : {
          "timeEstimates" : {
            "type" : "array",
            "description" : "List of time estimates",
            "items" : {
              "$ref" : "#/components/schemas/TimeEstimate"
            }
          }
        }
      },
      "RGBColor" : {
        "required" : [ "blue", "green", "red" ],
        "type" : "object",
        "properties" : {
          "red" : {
            "maximum" : 255,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "blue" : {
            "maximum" : 255,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "green" : {
            "maximum" : 255,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "Product" : {
        "required" : [ "id", "planId", "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "Human-friendly string to describe this product."
          },
          "id" : {
            "type" : "string",
            "description" : "unique id of the produce for this provider"
          },
          "bookingOption" : {
            "$ref" : "#/components/schemas/BookingOption"
          },
          "planId" : {
            "type" : "string",
            "description" : "pricing rules or plan identifier"
          }
        },
        "description" : "List of products available"
      },
      "BookingOutput" : {
        "required" : [ "id", "state" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "product id"
          },
          "customer" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "state" : {
            "type" : "string",
            "description" : "Booking status",
            "enum" : [ "COMMIT", "CANCEL", "DONE" ]
          }
        }
      },
      "TimeEstimate" : {
        "required" : [ "productId" ],
        "type" : "object",
        "properties" : {
          "productId" : {
            "type" : "string",
            "description" : "Product identifier"
          },
          "estimate" : {
            "type" : "integer",
            "description" : "ETA for the product (in seconds). Always show estimate in minutes",
            "format" : "int32"
          }
        },
        "description" : "List of time estimates"
      },
      "CancelInput" : {
        "required" : [ "operation" ],
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "description" : "booking operation",
            "enum" : [ "COMMIT", "CANCEL", "DONE", "COMMIT, CANCEL, DONE" ]
          },
          "id" : {
            "type" : "string",
            "description" : "booking id to cancel"
          }
        }
      },
      "Endpoint" : {
        "required" : [ "name", "url" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Key identifying the type of endpoint this is",
            "enum" : [ "provider", "coverage", "estimatePrice", "estimateTime", "stationInformation", "stationStatus", "freeBikeStatus", "confirmBook", "doneBook", "cancelBook" ]
          },
          "url" : {
            "type" : "string",
            "description" : "URL for the endpoint, it can be absolute or relative"
          }
        },
        "description" : "List of endpoints available"
      },
      "PriceEstimateList" : {
        "required" : [ "priceEstimates" ],
        "type" : "object",
        "properties" : {
          "priceEstimates" : {
            "type" : "array",
            "description" : "List of price estimates",
            "items" : {
              "$ref" : "#/components/schemas/PriceEstimate"
            }
          }
        }
      },
      "EndpointsConfig" : {
        "required" : [ "endpoints" ],
        "type" : "object",
        "properties" : {
          "endpoints" : {
            "type" : "array",
            "description" : "List of endpoints available",
            "items" : {
              "$ref" : "#/components/schemas/Endpoint"
            }
          }
        }
      },
      "ImageObject" : {
        "required" : [ "contentUrl" ],
        "type" : "object",
        "properties" : {
          "caption" : {
            "type" : "string",
            "description" : "The caption for this object"
          },
          "contentUrl" : {
            "type" : "string",
            "description" : "URL to download image"
          },
          "fileFormat" : {
            "type" : "string",
            "description" : "Media type of image"
          },
          "width" : {
            "type" : "integer",
            "description" : "Width in pixels",
            "format" : "int32"
          },
          "height" : {
            "type" : "integer",
            "description" : "Height in pixels",
            "format" : "int32"
          }
        },
        "description" : "Image stored remotely"
      },
      "Coverage" : {
        "required" : [ "features", "type" ],
        "type" : "object",
        "properties" : {
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CoverageArea"
            }
          },
          "type" : {
            "type" : "string",
            "enum" : [ "FeatureCollection" ]
          }
        }
      },
      "Scale" : {
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "integer",
            "format" : "int32"
          },
          "to" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "KM", "MILE", "HOUR", "MINUTE", "WEEKDAY" ]
          },
          "proportional" : {
            "type" : "boolean"
          }
        }
      },
      "FarePart" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "name of this pricing part"
          },
          "amount" : {
            "type" : "number",
            "format" : "float"
          },
          "currencyCode" : {
            "type" : "string"
          },
          "taxRate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "FIXED", "FLEX", "MAX", "MIN" ]
          },
          "unitType" : {
            "type" : "string",
            "enum" : [ "KM", "SECOND", "MINUTE", "HOUR", "MILE", "PERCENTAGE" ]
          },
          "units" : {
            "type" : "number",
            "description" : "the number of km, seconds etc in the `per` part. In the first example of the description this should be 2.0",
            "format" : "float"
          },
          "scales" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Scale"
            }
          }
        },
        "description" : "this describes a part of the fare (or discount).It contains a for instance the startup costs (fixed) or the flex part (e.g. 1.25 EUR per 2.0 MILES).The amount is tax included. In case of discounts, the values are negative.With 'MAX' you can specify e.g. a maximum of 15 euro per day. Percentage is mainly added for discounts.The `scale` properties create the ability to communicate scales(e.g. the first 4 kilometers you've to pay EUR 0.35 per kilometer, the kilometers 4 until 8 EUR 0.50 and above it EUR 0.80 per kilometer)."
      },
      "AppInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "appURLiOS" : {
            "type" : "string"
          },
          "appURLAndroid" : {
            "type" : "string"
          },
          "deepLinkPattern" : {
            "type" : "string",
            "description" : "deep link pattern, including the following placeholders between <>: fromLat, fromLng, fromAddress, toLat, toLng, toAddress, productId"
          }
        }
      },
      "Provider" : {
        "required" : [ "companyInfo", "modesEnabled" ],
        "type" : "object",
        "properties" : {
          "companyInfo" : {
            "$ref" : "#/components/schemas/CompanyInfo"
          },
          "modesEnabled" : {
            "type" : "array",
            "description" : "modes enabled for this provider",
            "items" : {
              "type" : "string",
              "description" : "modes enabled for this provider",
              "enum" : [ "pt_pub, ps_tax, ps_tnc, ps_shu, cy_bic-s, me_car-s, me_car-r, me_car-p" ]
            },
            "enum" : [ "pt_pub, ps_tax, ps_tnc, ps_shu, cy_bic-s, me_car-s, me_car-r, me_car-p" ]
          }
        }
      },
      "Fare" : {
        "type" : "object",
        "properties" : {
          "estimated" : {
            "type" : "boolean"
          },
          "description" : {
            "type" : "string"
          },
          "bookingFee" : {
            "type" : "number",
            "format" : "float"
          },
          "waitingMaxSpeed" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parts" : {
            "type" : "array",
            "description" : "this describes a part of the fare (or discount).It contains a for instance the startup costs (fixed) or the flex part (e.g. 1.25 EUR per 2.0 MILES).The amount is tax included. In case of discounts, the values are negative.With 'MAX' you can specify e.g. a maximum of 15 euro per day. Percentage is mainly added for discounts.The `scale` properties create the ability to communicate scales(e.g. the first 4 kilometers you've to pay EUR 0.35 per kilometer, the kilometers 4 until 8 EUR 0.50 and above it EUR 0.80 per kilometer).",
            "items" : {
              "$ref" : "#/components/schemas/FarePart"
            }
          }
        },
        "description" : "the total fare is the sum of all parts, except for the 'MAX' farePart. This one describes the maximum price for the complete leg.\nestimated: is this fare an estimation?"
      },
      "MultiPolygon" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "the geometry type",
            "enum" : [ "MultiPolygon", "MULTIPOLYGON" ]
          },
          "coordinates" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "array",
                "items" : {
                  "type" : "array",
                  "items" : {
                    "type" : "number",
                    "format" : "double"
                  }
                }
              }
            }
          }
        },
        "description" : "GeoJSON MultiPolygon geometry"
      },
      "PriceEstimateInput" : {
        "required" : [ "origin" ],
        "type" : "object",
        "properties" : {
          "origin" : {
            "$ref" : "#/components/schemas/Location"
          },
          "destination" : {
            "$ref" : "#/components/schemas/Location"
          },
          "depart" : {
            "type" : "string",
            "description" : "ISO-8601 formatted date. Either this or `arrive` is required."
          },
          "arrive" : {
            "type" : "string",
            "description" : "ISO-8601 formatted date. Either this or `depart` is required. If this is provided, `destination` is required. "
          },
          "passengers" : {
            "type" : "integer",
            "description" : "Number of passengers",
            "format" : "int32"
          },
          "wheelchair" : {
            "type" : "boolean",
            "description" : "If a wheelchair-accessible vehicle is required"
          },
          "productId" : {
            "type" : "string",
            "description" : "ID of the product if quotes should be limited to that."
          }
        }
      },
      "BookingInput" : {
        "required" : [ "operation" ],
        "type" : "object",
        "properties" : {
          "operation" : {
            "type" : "string",
            "description" : "booking operation",
            "enum" : [ "COMMIT", "CANCEL", "DONE", "COMMIT, CANCEL, DONE" ]
          },
          "id" : {
            "type" : "string",
            "description" : "quote id"
          },
          "from" : {
            "$ref" : "#/components/schemas/Location"
          },
          "to" : {
            "$ref" : "#/components/schemas/Location"
          },
          "customer" : {
            "$ref" : "#/components/schemas/Customer"
          },
          "pickupTime" : {
            "type" : "string",
            "description" : "ISO-8601 formatted date. Pick up time"
          },
          "note" : {
            "type" : "string",
            "description" : "Booking note"
          }
        }
      },
      "CompanyInfo" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "appInfo" : {
            "$ref" : "#/components/schemas/AppInfo"
          },
          "name" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "website" : {
            "type" : "string"
          },
          "logos" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ImageObject"
            }
          },
          "color" : {
            "$ref" : "#/components/schemas/RGBColor"
          }
        }
      },
      "PriceEstimate" : {
        "required" : [ "currency", "productId" ],
        "type" : "object",
        "properties" : {
          "productId" : {
            "type" : "string",
            "description" : "Product identifier"
          },
          "currency" : {
            "type" : "string",
            "description" : "Unambiguous currency identifier, e.g., \"EUR\" or \"USD\""
          },
          "estimate" : {
            "type" : "integer",
            "description" : "estimate in cents (at least one of the 3 price estimates must be present)",
            "format" : "int32"
          },
          "lowEstimate" : {
            "type" : "integer",
            "description" : "lower estimate in cents (at least one of the 3 price estimates must be present)",
            "format" : "int32"
          },
          "highEstimate" : {
            "type" : "integer",
            "description" : "higher estimate in cents (at least one of the 3 price estimates must be present)",
            "format" : "int32"
          },
          "duration" : {
            "type" : "integer",
            "description" : "estimate duration of the trip, in seconds",
            "format" : "int32"
          },
          "distance" : {
            "type" : "integer",
            "description" : "estimate distance of the trip, in metres",
            "format" : "int32"
          }
        },
        "description" : "List of price estimates"
      },
      "Location" : {
        "required" : [ "latitude", "longitude" ],
        "type" : "object",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "format" : "double"
          },
          "longitude" : {
            "type" : "number",
            "format" : "double"
          },
          "address" : {
            "type" : "string"
          },
          "earthRadius" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "description" : "end location info"
      }
    }
  }
}